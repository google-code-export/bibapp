#summary BibApp Project Roadmap

*TODO*: Expand this page.

==Version 1.0 - Requirements==

  * Authentication and Authorization
  * Citations
    * Citation ingest
    * Citation reuse
  * Time

===Authentication and Authorization===

   * Goals:
     # Simple Authorization
       * Preferable to use an existing Rails plugin or Ruby gem
       * Authorization "roles" will be assigned to "groups"
       * Assume no hierarchy to "groups", to keep things simple
     # Simple, but Dynamic Authentication
       * Preferable to use an existing Rails plugin or Ruby gem
       * Cannot "assume" any particular local authentication mechanism 

   * Recommendations:
     # Authorization
       * Use "[http://www.writertopia.com/developers/authorization Authorization plugin]", which seems to provide very clean [http://www.rubyinside.com/authorization-permissions-plugin-for-rails-154.html role-based authorization using dynamic methods].  Also seems to be highly recommended/respected (e.g. [http://www.vaporbase.com/postings/Authorization_in_Rails Authorization in Rails]).
       * Possible Roles (need better definition & agreement)
         * *Admin* - Overall BibApp Administrator
         * *Librarian* - Can perform all data-related tasks (e.g. add, remove, edit data)
         * *Editor* - Can edit or enter in new data (cannot remove)
         * *Data-Entry* - Can only enter in new data (cannot edit/remove)
         * *Packager* - Can export citations into "packages" to prepare for a repository
     # Authentication
       * Use [http://agilewebdevelopment.com/plugins/simple_http_auth Simple HTTP Auth] plugin?
         * Advantages:
            * Doesn't force you into an authentication method.  You are responsible for writing your own manner of authenticating - Dynamic!
            * Doesn't force you into using a particular model, controller, etc.
         * Disadvantages:
            * A little more work for us.  It also doesn't maintain your user database or anything.  We'd need to probably develop a few example authentication methods (e.g. simple HTTP, Active Directory/LDAP, OpenID, etc.) which could be selected from when setting up BibApp.
       * Alternate route #1: Use "[http://railscasts.com/episodes/67 restful_authentication]" plugin?
            * Not sure if this is dynamic enough to support external authentication methods (where an already authenticated username is passed to BibApp).
       * Alternate route #2: [http://blog.craz8.com/authenticate-as-remote-user-plugin/ Authenticate as Remote User] plugin
          * This plugin only assumes username is passed in a Request variable...by default looks for the Apache "REMOTE_USER" header, but it looks to be easily configurable.  Not sure if this is dynamic enough though, as it looks to be built more for Apache-based authentication.
          
===Citations===

Read the [CitationModelRefactor] page to better understand the re-architecture for version 1.0.

====Citation ingest====

  * Goals:
    # Simple workflow for adding citations
    # Support for many citation types: Journal Article, Books, etc.
    # Support for common standards
    # Automated de-duplication
  * Success criteria:
    # One
    # Two
    # Three

=====Description=====

To be successful, the BibApp needs to be a robust citation repository first and foremost.  We need to ensure data ingest remains simple and intuitive, lowing the bar for participation and administration.


====Citation reuse====

  * Goals:
    # Goal 1
  * Success criteria:
    # Example

===Time===

==Version 2.0 - Suggested Features==

  * Interoperability
  * More SHERPA
  * Focus on current campus collaboration
  * Authorities
    * Author names
    * Journals / Sources
    * Publishers
  * Cited references?