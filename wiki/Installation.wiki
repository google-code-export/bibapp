#summary Installation Instructions for BibApp
#labels Featured

== Introduction ==

!BibApp is a [http://www.rubyonrails.org/ Ruby on Rails] 2.0 web application.  If you are familiar with installing Ruby on Rails applications, !BibApp should be no different!  If this is your first time with Ruby on Rails, don't worry...we've tried to make things easy on you.

At a basic level, Ruby on Rails applications require the following:
  * A Web server
  * A Database
  * Ruby and..
  * Rails

Currently, because of a small development/testing team, we have some recommendations for your Rails setup for !BibApp.  You may be able to get away with other non-recommended Ruby on Rails setups.  But, we haven't verified they all work with !BibApp, yet. 

So, without further ado...

== Software Pre-requisities ==

!BibApp should run on any Operating System.  Currently we've had it successfully running on Linux, Mac OS X and Windows XP.

!BibApp *requires* the following software to function properly:
  * [http://www.ruby-lang.org/ Ruby] 1.8.5 or later
    * Check your version by running `ruby --version` at command line
  * [http://www.rubygems.org/ RubyGems] 1.0.1 or later
    * Check your version by running `gem --version` at command line
  * [http://java.sun.com/javase/downloads/index.jsp Java] 1.5 or later (_note:_ Java 1.5 is also sometimes called Java 5.x, similarly Java 1.6 is also called 6.x)
    * Check your version by running `java -version` at command line

!BibApp gives you a few options when it comes to your database.  Currently, we support either of the following:
  * [http://www.mysql.com/ MySQL] 4.1 or 5.0
  OR
  * [http://www.postgresql.org/ PostgreSQL] 8.x (7.4 may also work)

_Optional:_ If you want to be able to pull down !BibApp directly from our !GoogleCode site, you may also wish to install [http://subversion.tigris.org/ Subversion (svn)].

That's everything you need to get started...

== Get Started with !BibApp ==

Before we jump in, it's worth explaining a bit about what software !BibApp has bundled (Rails uses the term "frozen") within it.  You don't need to understand what everything is doing, but we just want to let you know it's there! When you download !BibApp, it already comes pre-packaged with the following:
  * [http://www.rubyonrails.org/ Rails] 2.0.2  - That's right, you don't even have to install Rails!
  * [http://lucene.apache.org/solr/ Solr] - Used for all the !BibApp browse/search interfaces
  * A variety of [http://www.rubygems.org/ Ruby Gems] and Rails Plugins. It's worth highlighting a few custom plugins created specifically for !BibApp:
    * `citation_parser` and `citation_importer` - These custom plugins parse citations from our various supported input formats, and import the data into our database structure.  As more citation parsers are created, we'll be able to support more input formats!
    * `sword_client` - This is our custom [http://www.ukoln.ac.uk/repositories/digirep/index/SWORD SWORD (Simple Web-service Offering Repository Deposit)] client.  It lets you deposit research (both metadata and files) into your local repository directly from !BibApp!

=== Ruby Gem Pre-requisites ===

Unfortunately, we cannot bundle every necessary Ruby Gem within !BibApp.  We've tried to minimize your need to install Gems, but there are still a few you'll need to install yourself:
  * Database Driver Gem - based on your database of choice
    * If you are using MySQL, install the `mysql` gem:  
     {{{ 
     gem install mysql -- --with-mysql-dir=/path/to/mysql 
     }}}
    * If you are using PostgreSQL, install the `postgres` gem:
     {{{ 
     gem install postgres -- --with-pgsql-dir=/path/to/pgsql 
     }}}
  * Ruby Web Server - [http://mongrel.rubyforge.org/ Mongrel] is recommended.  We also recommend `mongrel_cluster`, which allows you to run several mongrel instances in a cluster (though, if you are just trying out !BibApp, this isn't really necessary).
     {{{ 
     gem install mongrel 
     gem install mongrel_cluster 
     }}}
  * [http://code.whytheluckystiff.net/hpricot/ Hpricot] - an HTML parser used by !BibApp.  This gem unfortunately cannot be packaged with !BibApp as it uses underlying C code which must be compiled on each operating system (But, don't worry, it compiles automatically when you install it.)
     {{{ 
     gem install hpricot 
     }}}

=== Install !BibApp Code ===

  {{{
  TODO: UPDATE download instructions after official release!!
  }}}

There are two different ways to install !BibApp:

  # If you have Subversion installed, you can just pull down the latest code:
    {{{
    svn checkout http://bibapp.googlecode.com/svn/trunk/
    }}}
  # Otherwise, you can download the latest Zipped up release from the [http://code.google.com/p/bibapp/downloads/list Downloads] 

  {{{
  NOTE: Throughout the remainder of these instructions we use the placeholder [bibapp]
  to represent the location where you have installed the BibApp code!
  }}}

=== Configure !BibApp ===

Once you've pulled down the code, you'll need to edit the !BibApp configurations for your local settings.  In the `[bibapp]/config` directory, look for the following "example" configurations:

  * database.yml.example
  * ldap.yml.example
  * personalize.rb.example
  * smtp.yaml.example
  * solr.yml.example
  * sword.yml.example

You'll need to remove the .example extension from each of these files and personalize the contents as necessary.  Each of the above files include instructions within them describing how to configure them properly for your institution. In the end you should end up with a file list similar to the following (REQUIRED configuration files are *bold*):

  * *database.yml* - Your local database settings 
  * ldap.yml - Your campus LDAP directory settings
    * Setting this configuration eases the process of adding People to !BibApp by allowing you to search your local LDAP directory to pre-populate person information.
    * You may disable this configuration by leaving the ".example" file extension on the file.
  * *personalize.rb* - Your !BibApp personalization settings
  * *smtp.yml* - Your SMTP settings for user account creation verification emails
  * *solr.yml* - Your Solr port settings (may not require changes)
  * sword.yml - Your SWORD server settings
    * This configuration is only necessary if you have a local digital or institutional repository which supports [http://www.ukoln.ac.uk/repositories/digirep/index/SWORD SWORD (Simple Web-service Offering Repository Deposit)].  If you have a repository supporting SWORD, !BibApp can accept uploaded files and make deposits (of both files and metadata) directly into your local repository.
    * You may disable this configuration by leaving the ".example" file extension on the file.


=== Setup Your !BibApp Database ===

Now, you'll need to setup a database for !BibApp.  You should already have installed either MySQL or PostgreSQL.  Now, it's just a matter of creating a new database!  

Make sure your database is named the same as the 'database' setting in your `config/database.yml` file!  In addition, you should login as the user specified in your `config/database.yml` when creating your database (to ensure that user owns the database) 


   * *For MySQL:*  Connect to MySQL, and create a UTF8 database named 'bibapp' using the following SQL query:
      {{{
      CREATE DATABASE bibapp CHARACTER SET = 'utf8';
      }}}
   
   * *For PostgreSQL:* Use the following command line script to create a database named 'bibapp' with a database owner of 'bibapp_user': 
      {{{
      createdb -U bibapp_user -E UNICODE bibapp
      }}}

Now you can generate the !BibApp database structure into your new database!  From within your `[bibapp]` directory:
    {{{
    rake db:migrate
    }}}
You should see a large number of 'migration' messages scroll by.  That's perfectly normal! But, if any errors appear, there are problems which you will have to resolve *before* !BibApp will function properly! 

Before continuing, you also need to initialize your database with the current [http://www.sherpa.ac.uk/romeo.php SHERPA RoMEO] publisher policy data.  This data is used to help researchers determine which of their publications can be deposited in a local repository, for safe keeping.  From within your `[bibapp]` directory:
    {{{
    rake sherpa:update_publisher_data
    }}}

Your database should now be setup and initialized properly!

=== Startup !BibApp ===

You're almost there!

In order to startup !BibApp on your server, you must do *both* of the following (from within your `[bibapp]` directory):
  * _Start Solr:_ Solr handles all the fancy browsing and searching in !BibApp
    * On Linux / Mac OS X : `rake solr:start`
    * On Windows : `rake solr:start_win`
  * _Start your web server:_ We're assuming you installed Mongrel, for the sake of these instructions.
     {{{
     mongrel_rails start
     }}}

Try it out!  Assuming your web server is on port 3000 (which is Mongrel's default), you should have !BibApp running at:  http://localhost:3000/

== Using !BibApp ==

=== Logging In For the First Time ===

!BibApp comes with a pre-initialized "admin" user.  The login for this user is "admin" (lowercase), and the default password is "bibapp" (lowercase).

This "admin" user has System Administrator rights, and can do anything within !BibApp.  Therefore, it is _absolutely necessary_ to *login and change the password* for this user as soon as possible.

_Repeat:_ it is _absolutely necessary_ to *login and change the password* for this user as soon as possible.  

So, login and do it now!  

  # After logging in, click on "Welcome: admin" in the upper right, to view your "admin" user's account information.  
  # Click "Change Password", and fill out the default password along with your new password

Finally, (although not required at this time) you may wish to change the email account associated with this "admin" user.   At this time, !BibApp only uses that email address if you have forgotten your password and request a new one be generated.   So, if you have any concerns about forgetting your "admin" user's password, change the email to point to a valid email address!